---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: skopeo-copy
  labels:
    app.kubernetes.io/version: 0.0.1
spec:
  description: | 
    Skopeo is a command line tool for working with remote image registries. 
    The copy command will take care of copying the image from internal.registry 
    to production.registry. If your production registry requires credentials to 
    login in order to push the image, skopeo can handle that as well.
  params:
    - name: SOURCE_REGISTRY
      type: string
      description: |
        Source Registry URL
    - name: DESTINATION_REGISTRY
      type: string
      description: |
        Destination Registry URL
  steps:
    # - name: login-src
    #   image: quay.io/skopeo/stable:latest
    #   script: |
    #     skopeo login docker.io -u=$(params.SOURCE_AUTH_USERNAME) -p=$(params.SOURCE_AUTH_PASSWORD)
    # - name: login-dest
    #   image: quay.io/skopeo/stable:latest
    #   script: |
    #     skopeo login docker.io -u=$(params.DESTINATION_AUTH_USERNAME) -p=$(params.DESTINATION_AUTH_PASSWORD)
    - name: copy
      image: quay.io/skopeo/stable
      command:
        - sh
        - -c
        - |
          skopeo copy --src-creds=$(cat /var/run/secrets/sc-secret/username):$(cat /var/run/secrets/sc-secret/password) \
          --dest-creds=$(cat /var/run/secrets/sc-secret/username):$(cat /var/run/secrets/sc-secret/password) \
          docker://$(params.SOURCE_REGISTRY) docker://$(params.DESTINATION_REGISTRY)
    # - name: copy
    #   image: quay.io/skopeo/stable:latest
    #   script: |
    #     skopeo copy --src-creds $(params.SOURCE_AUTH_USERNAME):$(params.SOURCE_AUTH_PASSWORD) \
    #     docker://$(params.SOURCE_REGISTRY) --dest-creds $(params.DESTINATION_AUTH_USERNAME):$(params.DESTINATION_AUTH_PASSWORD) \
    #     docker://$(params.DESTINATION_REGISTRY)
      volumeMounts:
        - name: registry-secret
          mountPath: /var/run/secrets/sc-secret
  volumes:
    - name: registry-secret
      secret:
        secretName: sc-secret
